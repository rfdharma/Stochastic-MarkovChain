short_text <- c("Dalam perbandingan antara Anies dan Prabowo, Ganjar menunjukkan keunggulan dengan memiliki gagasan dan ide yang lebih kreatif serta menjadi pemimpin masa depan yang paling solutif. Ganjar lebih inovatif dalam menyajikan konsep-konsep yang cemerlang dan menjadi sosok pemimpin yang memiliki visi mendalam untuk masa depan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Gaji guru sebesar jutaan rupiah telah disalurkan untuk mendukung program Ganjar Mahfud. Dengan keyakinan akan peran guru dalam pembangunan nasional dan peningkatan kualitas pendidikan, diharapkan program ini akan membawa berkah bagi kesejahteraan guru.
")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Dalam perbandingan antara Anies dan Prabowo, Ganjar menunjukkan keunggulan dengan memiliki gagasan dan ide yang lebih kreatif serta menjadi pemimpin masa depan yang paling solutif. Ganjar lebih inovatif dalam menyajikan konsep-konsep yang cemerlang dan menjadi sosok pemimpin yang memiliki visi mendalam untuk masa depan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
fit_markov_short $estimate
# a single sentence
short_text <- c("Dalam perbandingan antara Anies dan Prabowo, Ganjar menunjukkan keunggulan dengan memiliki gagasan dan ide yang lebih kreatif serta menjadi pemimpin masa depan yang paling solutif. Ganjar lebih inovatif dalam menyajikan konsep-konsep yang cemerlang dan menjadi sosok pemimpin yang memiliki visi mendalam untuk masa depan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Thread membahas tentang Ganjar, gubernur yang membela aksi jogging di Jakarta dan berpartisipasi dalam aksi bela Palestina. Ada kritik terhadap Prabowo yang disebut wajar, serta informasi bahwa Hashim sebagai mitra bisnis utama merupakan sponsor Israel sesuai dengan informasi yang diungkapkan oleh tim sesuai.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
plot(fit_markov_short$estimate)
set.seed(42)
plot(fit_markov_short$estimate)
set.seed(42)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Thread membahas tentang Ganjar, gubernur yang membela aksi jogging di Jakarta dan berpartisipasi dalam aksi bela Palestina. Ada kritik terhadap Prabowo yang disebut wajar, serta informasi bahwa Hashim sebagai mitra bisnis utama merupakan sponsor Israel sesuai dengan informasi yang diungkapkan oleh tim sesuai.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(42)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Thread membahas tentang Ganjar, gubernur yang membela aksi jogging di Jakarta dan berpartisipasi dalam aksi bela Palestina. Ada kritik terhadap Prabowo yang disebut wajar, serta informasi bahwa Hashim sebagai mitra bisnis utama merupakan sponsor Israel sesuai dengan informasi yang diungkapkan oleh tim sesuai.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(42)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Syarat pendukung Prabowo dianggap memiliki IQ rendah dan melakukan bully serta menghujat. Ada kritik bahwa sikap pendukung Prabowo berubah menjadi penjilat uang dan kekuasaan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(42)
plot(fit_markov_short$estimate)
# a single sentence
short_text <- c("Dalam perbandingan antara Anies dan Prabowo, Ganjar menunjukkan keunggulan dengan memiliki gagasan dan ide yang lebih kreatif serta menjadi pemimpin masa depan yang paling solutif. Ganjar lebih inovatif dalam menyajikan konsep-konsep yang cemerlang dan menjadi sosok pemimpin yang memiliki visi mendalam untuk masa depan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "pemilu", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "pemilihan presiden", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "presiden", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "capres", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Ganjar", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:1) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:1) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:1) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Bowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
fit_markov$estimate
library(markovchain)
library(dplyr)
library(readxl)
df <- read_excel('negatif.xlsx')
df$text_term <- strsplit(as.character(df$text), split = " ")
text_states <- unlist(df$text_term)
fit_markov <- markovchainFit(text_states, method = "laplace")
set.seed(42)
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo-Gibran", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
library(markovchain)
library(dplyr)
library(readxl)
df <- read_excel('negatif.xlsx')
df$text_term <- strsplit(as.character(df$text), split = " ")
text_states <- unlist(df$text_term)
fit_markov <- markovchainFit(text_states, method = "laplace")
set.seed(42)
plot(fit_markov$estimate)
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Ganjar", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:2) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
library(markovchain)
library(dplyr)
library(readxl)
df <- read_excel('positif.xlsx')
df$text_term <- strsplit(as.character(df$text), split = " ")
text_states <- unlist(df$text_term)
fit_markov <- markovchainFit(text_states, method = "laplace")
set.seed(42)
plot(fit_markov$estimate)
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
source("D:/Kuliah/Semester/Semester 5/Proses Stokastik/UAS/markov_chain.R", echo=TRUE)
# a single sentence
short_text <- c("Syarat pendukung Prabowo dianggap memiliki IQ rendah dan melakukan bully serta menghujat. Ada kritik bahwa sikap pendukung Prabowo berubah menjadi penjilat uang dan kekuasaan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(42)
plot(fit_markov_short$estimate)
library(markovchain)
library(dplyr)
library(readxl)
df <- read_excel('positif.xlsx')
df$text_term <- strsplit(as.character(df$text), split = " ")
text_states <- unlist(df$text_term)
fit_markov <- markovchainFit(text_states, method = "laplace")
set.seed(42)
plot(fit_markov$estimate)
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# a single sentence
short_text <- c("Dalam perbandingan antara Anies dan Prabowo, Ganjar menunjukkan keunggulan dengan memiliki gagasan dan ide yang lebih kreatif serta menjadi pemimpin masa depan yang paling solutif. Ganjar lebih inovatif dalam menyajikan konsep-konsep yang cemerlang dan menjadi sosok pemimpin yang memiliki visi mendalam untuk masa depan.")
# split the sentence into words
text_term <- strsplit(short_text, split = " ") %>% unlist()
short_text
fit_markov_short <- markovchainFit(text_term, method = "laplace")
set.seed(123)
plot(fit_markov_short$estimate)
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
library(markovchain)
library(dplyr)
library(readxl)
df <- read_excel('positif.xlsx')
df$text_term <- strsplit(as.character(df$text), split = " ")
text_states <- unlist(df$text_term)
fit_markov <- markovchainFit(text_states, method = "laplace")
set.seed(42)
plot(fit_markov$estimate)
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo-Gibran", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {''
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Ganjar", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Ganjar", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
library(markovchain)
library(dplyr)
library(readxl)
df <- read_excel('negatif.xlsx')
df$text_term <- strsplit(as.character(df$text), split = " ")
text_states <- unlist(df$text_term)
fit_markov <- markovchainFit(text_states, method = "laplace")
set.seed(42)
plot(fit_markov$estimate)
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Gibran", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Anies", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Prabowo", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
# generate semi-random sentence
for (i in 1:3) {
set.seed(i)
markovchainSequence(n = 20,
markovchain = fit_markov$estimate, # transition matrix
t0 = "Ganjar", include.t0 = T) %>%  # set the first word
# joint words
paste(collapse = " ") %>%
paste0(".") %>%
print()
}
